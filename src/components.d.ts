/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface DialogComponent {
        "dialogOpened": boolean;
    }
    interface MyComponent {
    }
    interface MyDialog {
        "dialogOpened": boolean;
    }
    interface MyInput {
        "placeholder": string;
        "type": string;
    }
}
declare global {
    interface HTMLDialogComponentElement extends Components.DialogComponent, HTMLStencilElement {
    }
    var HTMLDialogComponentElement: {
        prototype: HTMLDialogComponentElement;
        new (): HTMLDialogComponentElement;
    };
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLMyDialogElement extends Components.MyDialog, HTMLStencilElement {
    }
    var HTMLMyDialogElement: {
        prototype: HTMLMyDialogElement;
        new (): HTMLMyDialogElement;
    };
    interface HTMLMyInputElement extends Components.MyInput, HTMLStencilElement {
    }
    var HTMLMyInputElement: {
        prototype: HTMLMyInputElement;
        new (): HTMLMyInputElement;
    };
    interface HTMLElementTagNameMap {
        "dialog-component": HTMLDialogComponentElement;
        "my-component": HTMLMyComponentElement;
        "my-dialog": HTMLMyDialogElement;
        "my-input": HTMLMyInputElement;
    }
}
declare namespace LocalJSX {
    interface DialogComponent {
        "dialogOpened"?: boolean;
        "onOnclose"?: (event: CustomEvent<any>) => void;
        "onOnopen"?: (event: CustomEvent<any>) => void;
    }
    interface MyComponent {
    }
    interface MyDialog {
        "dialogOpened"?: boolean;
        "onOnclose"?: (event: CustomEvent<any>) => void;
        "onOnopen"?: (event: CustomEvent<any>) => void;
    }
    interface MyInput {
        "onOnblur"?: (event: CustomEvent<any>) => void;
        "onOnchange"?: (event: CustomEvent<any>) => void;
        "onOnclick"?: (event: CustomEvent<any>) => void;
        "onOnfocus"?: (event: CustomEvent<any>) => void;
        "onOninput"?: (event: CustomEvent<any>) => void;
        "placeholder"?: string;
        "type"?: string;
    }
    interface IntrinsicElements {
        "dialog-component": DialogComponent;
        "my-component": MyComponent;
        "my-dialog": MyDialog;
        "my-input": MyInput;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "dialog-component": LocalJSX.DialogComponent & JSXBase.HTMLAttributes<HTMLDialogComponentElement>;
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
            "my-dialog": LocalJSX.MyDialog & JSXBase.HTMLAttributes<HTMLMyDialogElement>;
            "my-input": LocalJSX.MyInput & JSXBase.HTMLAttributes<HTMLMyInputElement>;
        }
    }
}
